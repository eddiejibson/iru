{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/iru.js","webpack:///./src/request.js","webpack:///./src/getContent.js","webpack:///./src/switcher.js","webpack:///./src/renderClient.js","webpack:///./node_modules/marked/lib/marked.js","webpack:///(webpack)/buildin/global.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","require","render_client","url","method","arguments","length","Promise","resolve","reject","loading","document","getElementById","classList","add","loading_bar","style","width","xhr","XMLHttpRequest","open","onprogress","e","lengthComputable","percent","loaded","total","setTimeout","remove","concat","onload","status","response","statusText","onerror","console","error","send","window","$iru","regex","title","content","originalTitle","titleReg","exec","replace","substr","index","postContent","obj","slug","push","marked","to","container","prev","innerHTML","getElementsByTagName","path","location","href","withHash","hash","history","pushState","backHome","formatted_content","reset","settings","_objectSpread","posts","preview_length","root","make_request","get_content","switcher","load","body","Array","isArray","static","f","el","URL","lastIndexOf","then","res","catch","err","addEventListener","isHash","match","file","global","block","newline","code","fences","noop","hr","heading","nptable","blockquote","list","html","def","table","lheading","paragraph","text","Lexer","options","this","tokens","links","defaults","rules","normal","pedantic","gfm","tables","_label","_title","edit","getRegex","bullet","item","source","_tag","_comment","merge","lex","src","token","top","next","loose","cap","bull","b","listStart","listItems","space","tag","isordered","istask","ischecked","substring","type","rtrim","lang","trim","depth","header","splitCells","align","split","cells","test","ordered","start","indexOf","RegExp","smartLists","slice","join","charAt","undefined","task","checked","sanitize","pre","sanitizer","toLowerCase","Error","charCodeAt","inline","escape","autolink","link","reflink","nolink","strong","em","br","del","InlineLexer","renderer","Renderer","breaks","TextRenderer","Parser","slugger","Slugger","seen","encode","escapeTest","escapeReplace","ch","replacements","escapeTestNoEncode","escapeReplaceNoEncode","unescape","_","String","fromCharCode","parseInt","opt","val","cleanUrl","base","prot","decodeURIComponent","originIndependentUrl","baseUrls","resolveUrl","encodeURI","_punctuation","_escapes","_scheme","_email","_attribute","_href","_extended_email","_backpedal","output","prevCapZero","out","inLink","inRawBlock","lastParenIndex","findClosingBracket","linkLen","outputLink","escapes","codespan","mangle","smartypants","image","Math","random","toString","infostring","escaped","highlight","langPrefix","quote","level","raw","headerIds","headerPrefix","xhtml","listitem","checkbox","tablerow","tablecell","flags","baseUrl","parse","inlineText","reverse","tok","pop","peek","parseText","row","cell","j","errMsg","silent","log","originalSlug","&","<",">","\"","'","target","tableRow","count","offset","str","curr","splice","invert","suffLen","currChar","callback","pending","done","message","setOptions","getDefaults","parser","lexer","inlineLexer","g","Function"],"mappings":"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","file":"iru.min.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","const render_client = require(\"./renderClient\");\r\nrender_client();","module.exports = (url, method = \"GET\") => {\r\n    return new Promise((resolve, reject) => {\r\n        let loading = document.getElementById(\"loading\");\r\n        loading.classList.add(\"loading-active\");\r\n        let loading_bar = document.getElementById(\"loading-bar\");\r\n        loading_bar.style.width = \"0%\";\r\n        let xhr = new XMLHttpRequest();\r\n        xhr.open(method, url);\r\n        xhr.onprogress = (e) => {\r\n            if (e.lengthComputable) {\r\n                let percent = (e.loaded / e.total) * 100;\r\n                if (percent == 100 || percent > 100) {\r\n                    setTimeout(() => {\r\n                        loading.classList.remove(\"loading-active\");\r\n                    }, 500); //after 0.5 second. transistion ends then.\r\n                }\r\n                if (loading_bar) {\r\n                    loading_bar.style.width = `${percent}%`;\r\n                }\r\n            }\r\n\r\n        }\r\n        xhr.onload = () => {\r\n            if (xhr.status >= 200 && xhr.status < 300) {\r\n                resolve(xhr.response);\r\n            } else {\r\n                reject({\r\n                    status: xhr.status,\r\n                    statusText: xhr.statusText\r\n                });\r\n            }\r\n        };\r\n        xhr.onerror = () => {\r\n            console.error(url)\r\n            reject({\r\n                status: xhr.status,\r\n                statusText: xhr.statusText\r\n            });\r\n        };\r\n        xhr.send();\r\n    });\r\n}","window.$iru.regex = { //Some expressions, thought best to save it here\r\n    title: /# .+/\r\n}\r\n\r\nmodule.exports = (content, title, length) => {\r\n    let originalTitle = title;\r\n    let titleReg = window.$iru.regex.title.exec(content);\r\n    if (titleReg && titleReg[0]) {\r\n        content = content.replace(titleReg[0], \"\");\r\n        title = titleReg[0].replace(\"# \", \"\");\r\n    }\r\n    if (content.length <= 0) {\r\n        content = \"Nothing's been written here...\";\r\n    }\r\n    if (content.length > length) {\r\n        content = content.substr(0, length) + \"...\"\r\n    }\r\n\r\n    let index = window.$iru.postContent.length || 0;\r\n\r\n    if (index == 1) {\r\n        index = 0;\r\n    }\r\n\r\n    let obj = {\r\n        title: title,\r\n        content: content,\r\n        index: index,\r\n        slug: originalTitle\r\n    };\r\n\r\n    window.$iru.postContent.push(obj);\r\n\r\n    return obj;\r\n}","// const make_request = require(\"./request\");\r\nwindow.render_client = require(\"./renderClient\");\r\nconst marked = require(\"marked\");\r\nmodule.exports = (to, title, index) => {\r\n    document.title = title; //firefox ignores the title property on pushstate so\r\n    let container = document.getElementById(\"container\");\r\n    window.$iru.prev = {\r\n        content: container.innerHTML,\r\n        title: document.getElementsByTagName(\"title\")[0].innerHTML || \"Posts\",\r\n        path: window.location.href\r\n    };\r\n    let withHash = to;\r\n    if (window.$iru) {\r\n        if (window.$iru.hash) {\r\n            withHash = `#${to}`;\r\n        }\r\n    }\r\n    history.pushState({}, title, withHash);\r\n    window.backHome = () => {\r\n        let container_reget = document.getElementById(\"container\");\r\n        container_reget.innerHTML = String(window.$iru.prev.content);\r\n        history.pushState({}, window.$iru.prev.title, window.$iru.prev.path);\r\n    }\r\n    let formatted_content = marked(window.$iru.postContent[index].content);\r\n    container.innerHTML = `<p class=\"clickable\" onclick=\"backHome()\" style=\"margin-top: 60px;font-size: 12px;margin-bottom: 4px;\">Back home</p><div class='card' ><h1>${title}</h1><div style=\"line-height:1.2\">${formatted_content}</div></div>`;\r\n}","const marked = require(\"marked\");\r\nmodule.exports = (reset = false) => {\r\n    var default_settings = {\r\n        name: \"My Posts\",\r\n        posts: false,\r\n        preview_length: 256,\r\n        hash: false,\r\n        root: \"/\"\r\n    }\r\n    window.$iru = window.$iru || {};\r\n    window.$iru.postContent = [];\r\n    var settings = {\r\n        ...default_settings,\r\n        ...window.$iru\r\n    };\r\n    var regex = { //Some expressions, thought best to save it here\r\n    }\r\n\r\n    var make_request = require(\"./request\");\r\n    var get_content = require(\"./getContent\");\r\n    window.switcher = require(\"./switcher\");\r\n\r\n    var load = (reset = false) => {\r\n        if (reset) {\r\n            document.body.innerHTML = \"<div class='loading' id='loading'><div class='loading-bar' id='loading-bar'></div></div><div class='container'><div id='container' class='inner-container'></div></div>\";\r\n        }\r\n\r\n        let container = document.getElementById(\"container\");\r\n        if (settings.name) {\r\n            container.innerHTML += `<div class='center-text' style='margin-top:20px;margin-bottom:20px;'><h1>${settings.name}</h1></div>`\r\n        }\r\n        if (settings.posts && Array.isArray(settings.posts) && settings.posts.length > 0 && !settings.static) {\r\n            for (let i = 0; i < settings.posts.length; i++) {\r\n                let el = settings.posts[i];\r\n                make_request(`${document.URL.substr(0,document.URL.lastIndexOf('/'))}/${el}.md`).then((res) => {\r\n                    let content = get_content(res, el, settings.preview_length);\r\n                    container.innerHTML += `<div class='card clickable' onclick=\"switcher('${content.slug}', '${content.title}', '${content.index}')\"><h1>${content.title}</h1><p>${content.content.replace(/#|\\*|\\`|\\||\\-|/g, \"\")}</p></div>`\r\n                }).catch((err) => {\r\n                    console.error(\"Error loading post content\", err);\r\n                });\r\n            }\r\n        } else {\r\n            settings.posts = false;\r\n        }\r\n\r\n        if (!settings.posts) {\r\n            container.innerHTML += ` < div class = 'center not-found'\r\n                                style = 'flex-direction:column!important' > < svg xmlns = \"http://www.w3.org/2000/svg\"\r\n                                viewBox = \"0 0 512 512\"\r\n                                class = 'sad' > < path d = \"M256 48C141.1 48 48 141.1 48 256c0 114.7 93.3 208 208 208 114.9 0 208-93.1 208-208 0-114.7-93.3-208-208-208zm-73.9 152.1c14.8-1.2 27 11.1 25.9 25.9-.9 11.6-10.3 21.1-22 22-14.8 1.2-27-11.1-25.9-25.9.9-11.7 10.3-21.1 22-22zm-.7 151.9c-11.5 0-19.3-11.8-14.7-22.4 15-34.5 49.2-58.6 89.3-58.6s74.2 24.1 89.3 58.6c4.6 10.6-3.1 22.4-14.7 22.4 0 0-34.7-4-73.1-4-38.5 0-76.1 4-76.1 4zm148.5-104.1c-14.8 1.2-27-11.1-25.9-25.9.9-11.6 10.3-21.1 22-22 14.8-1.2 27 11.1 25.9 25.9-.9 11.7-10.3 21.1-22 22z\" / > < /svg><p>There's been no posts here, yet.</p > < /div>`\r\n        }\r\n        // setTimeout(() => {\r\n        //     switcher(\"ran\", \"ran\");\r\n        // }, 1000);\r\n    }\r\n\r\n    if (reset) {\r\n        load();\r\n    }\r\n\r\n    document.addEventListener(\"DOMContentLoaded\", () => {\r\n        document.body.innerHTML += \"<div class='loading' id='loading'><div class='loading-bar' id='loading-bar'></div></div>\";\r\n        document.body.innerHTML += \"<div class='container'><div id='container' class='inner-container'></div></div>\";\r\n        if (document.URL.substr(document.URL.lastIndexOf(\"/\"), document.URL.length) && document.URL.substr(document.URL.lastIndexOf(\"/\"), document.URL.length) != settings.root) {\r\n            let path = document.URL.substr(document.URL.lastIndexOf(\"/\"), document.URL.length);\r\n            let isHash = path.match(/#.{1,}/);\r\n            let file = path.replace(\"/\", \"\").replace(\".html\", \"\");\r\n            if (isHash) {\r\n                file = isHash[0].substr(1, isHash[0].length);\r\n            }\r\n            make_request(`${document.URL.substr(0,document.URL.lastIndexOf('/'))}/${file}.md`).then((res) => {\r\n                let container = document.getElementById(\"container\");\r\n                let content = get_content(res, file, settings.preview_length);\r\n                let formatted_content = marked(content.content);\r\n                window.backHome = () => {\r\n                    load(true)\r\n                }\r\n                container.innerHTML = `<p class=\"clickable\" onclick=\"backHome()\" style=\"margin-top: 60px;font-size: 12px;margin-bottom: 4px;\">Back home</p><div class='card' ><h1>${content.title}</h1><div style=\"line-height:1.2\">${formatted_content}</div></div>`\r\n\r\n            }).catch((err) => {\r\n\r\n                load();\r\n            });\r\n        } else {\r\n            load();\r\n        }\r\n    });\r\n}","/**\n * marked - a markdown parser\n * Copyright (c) 2011-2018, Christopher Jeffrey. (MIT Licensed)\n * https://github.com/markedjs/marked\n */\n\n;(function(root) {\n'use strict';\n\n/**\n * Block-Level Grammar\n */\n\nvar block = {\n  newline: /^\\n+/,\n  code: /^( {4}[^\\n]+\\n*)+/,\n  fences: noop,\n  hr: /^ {0,3}((?:- *){3,}|(?:_ *){3,}|(?:\\* *){3,})(?:\\n+|$)/,\n  heading: /^ *(#{1,6}) *([^\\n]+?) *(?:#+ *)?(?:\\n+|$)/,\n  nptable: noop,\n  blockquote: /^( {0,3}> ?(paragraph|[^\\n]*)(?:\\n|$))+/,\n  list: /^( {0,3})(bull) [\\s\\S]+?(?:hr|def|\\n{2,}(?! )(?!\\1bull )\\n*|\\s*$)/,\n  html: '^ {0,3}(?:' // optional indentation\n    + '<(script|pre|style)[\\\\s>][\\\\s\\\\S]*?(?:</\\\\1>[^\\\\n]*\\\\n+|$)' // (1)\n    + '|comment[^\\\\n]*(\\\\n+|$)' // (2)\n    + '|<\\\\?[\\\\s\\\\S]*?\\\\?>\\\\n*' // (3)\n    + '|<![A-Z][\\\\s\\\\S]*?>\\\\n*' // (4)\n    + '|<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?\\\\]\\\\]>\\\\n*' // (5)\n    + '|</?(tag)(?: +|\\\\n|/?>)[\\\\s\\\\S]*?(?:\\\\n{2,}|$)' // (6)\n    + '|<(?!script|pre|style)([a-z][\\\\w-]*)(?:attribute)*? */?>(?=[ \\\\t]*(?:\\\\n|$))[\\\\s\\\\S]*?(?:\\\\n{2,}|$)' // (7) open tag\n    + '|</(?!script|pre|style)[a-z][\\\\w-]*\\\\s*>(?=[ \\\\t]*(?:\\\\n|$))[\\\\s\\\\S]*?(?:\\\\n{2,}|$)' // (7) closing tag\n    + ')',\n  def: /^ {0,3}\\[(label)\\]: *\\n? *<?([^\\s>]+)>?(?:(?: +\\n? *| *\\n *)(title))? *(?:\\n+|$)/,\n  table: noop,\n  lheading: /^([^\\n]+)\\n *(=|-){2,} *(?:\\n+|$)/,\n  paragraph: /^([^\\n]+(?:\\n(?!hr|heading|lheading| {0,3}>|<\\/?(?:tag)(?: +|\\n|\\/?>)|<(?:script|pre|style|!--))[^\\n]+)*)/,\n  text: /^[^\\n]+/\n};\n\nblock._label = /(?!\\s*\\])(?:\\\\[\\[\\]]|[^\\[\\]])+/;\nblock._title = /(?:\"(?:\\\\\"?|[^\"\\\\])*\"|'[^'\\n]*(?:\\n[^'\\n]+)*\\n?'|\\([^()]*\\))/;\nblock.def = edit(block.def)\n  .replace('label', block._label)\n  .replace('title', block._title)\n  .getRegex();\n\nblock.bullet = /(?:[*+-]|\\d{1,9}\\.)/;\nblock.item = /^( *)(bull) ?[^\\n]*(?:\\n(?!\\1bull ?)[^\\n]*)*/;\nblock.item = edit(block.item, 'gm')\n  .replace(/bull/g, block.bullet)\n  .getRegex();\n\nblock.list = edit(block.list)\n  .replace(/bull/g, block.bullet)\n  .replace('hr', '\\\\n+(?=\\\\1?(?:(?:- *){3,}|(?:_ *){3,}|(?:\\\\* *){3,})(?:\\\\n+|$))')\n  .replace('def', '\\\\n+(?=' + block.def.source + ')')\n  .getRegex();\n\nblock._tag = 'address|article|aside|base|basefont|blockquote|body|caption'\n  + '|center|col|colgroup|dd|details|dialog|dir|div|dl|dt|fieldset|figcaption'\n  + '|figure|footer|form|frame|frameset|h[1-6]|head|header|hr|html|iframe'\n  + '|legend|li|link|main|menu|menuitem|meta|nav|noframes|ol|optgroup|option'\n  + '|p|param|section|source|summary|table|tbody|td|tfoot|th|thead|title|tr'\n  + '|track|ul';\nblock._comment = /<!--(?!-?>)[\\s\\S]*?-->/;\nblock.html = edit(block.html, 'i')\n  .replace('comment', block._comment)\n  .replace('tag', block._tag)\n  .replace('attribute', / +[a-zA-Z:_][\\w.:-]*(?: *= *\"[^\"\\n]*\"| *= *'[^'\\n]*'| *= *[^\\s\"'=<>`]+)?/)\n  .getRegex();\n\nblock.paragraph = edit(block.paragraph)\n  .replace('hr', block.hr)\n  .replace('heading', block.heading)\n  .replace('lheading', block.lheading)\n  .replace('tag', block._tag) // pars can be interrupted by type (6) html blocks\n  .getRegex();\n\nblock.blockquote = edit(block.blockquote)\n  .replace('paragraph', block.paragraph)\n  .getRegex();\n\n/**\n * Normal Block Grammar\n */\n\nblock.normal = merge({}, block);\n\n/**\n * GFM Block Grammar\n */\n\nblock.gfm = merge({}, block.normal, {\n  fences: /^ {0,3}(`{3,}|~{3,})([^`\\n]*)\\n(?:|([\\s\\S]*?)\\n)(?: {0,3}\\1[~`]* *(?:\\n+|$)|$)/,\n  paragraph: /^/,\n  heading: /^ *(#{1,6}) +([^\\n]+?) *#* *(?:\\n+|$)/\n});\n\nblock.gfm.paragraph = edit(block.paragraph)\n  .replace('(?!', '(?!'\n    + block.gfm.fences.source.replace('\\\\1', '\\\\2') + '|'\n    + block.list.source.replace('\\\\1', '\\\\3') + '|')\n  .getRegex();\n\n/**\n * GFM + Tables Block Grammar\n */\n\nblock.tables = merge({}, block.gfm, {\n  nptable: /^ *([^|\\n ].*\\|.*)\\n *([-:]+ *\\|[-| :]*)(?:\\n((?:.*[^>\\n ].*(?:\\n|$))*)\\n*|$)/,\n  table: /^ *\\|(.+)\\n *\\|?( *[-:]+[-| :]*)(?:\\n((?: *[^>\\n ].*(?:\\n|$))*)\\n*|$)/\n});\n\n/**\n * Pedantic grammar\n */\n\nblock.pedantic = merge({}, block.normal, {\n  html: edit(\n    '^ *(?:comment *(?:\\\\n|\\\\s*$)'\n    + '|<(tag)[\\\\s\\\\S]+?</\\\\1> *(?:\\\\n{2,}|\\\\s*$)' // closed tag\n    + '|<tag(?:\"[^\"]*\"|\\'[^\\']*\\'|\\\\s[^\\'\"/>\\\\s]*)*?/?> *(?:\\\\n{2,}|\\\\s*$))')\n    .replace('comment', block._comment)\n    .replace(/tag/g, '(?!(?:'\n      + 'a|em|strong|small|s|cite|q|dfn|abbr|data|time|code|var|samp|kbd|sub'\n      + '|sup|i|b|u|mark|ruby|rt|rp|bdi|bdo|span|br|wbr|ins|del|img)'\n      + '\\\\b)\\\\w+(?!:|[^\\\\w\\\\s@]*@)\\\\b')\n    .getRegex(),\n  def: /^ *\\[([^\\]]+)\\]: *<?([^\\s>]+)>?(?: +([\"(][^\\n]+[\")]))? *(?:\\n+|$)/\n});\n\n/**\n * Block Lexer\n */\n\nfunction Lexer(options) {\n  this.tokens = [];\n  this.tokens.links = Object.create(null);\n  this.options = options || marked.defaults;\n  this.rules = block.normal;\n\n  if (this.options.pedantic) {\n    this.rules = block.pedantic;\n  } else if (this.options.gfm) {\n    if (this.options.tables) {\n      this.rules = block.tables;\n    } else {\n      this.rules = block.gfm;\n    }\n  }\n}\n\n/**\n * Expose Block Rules\n */\n\nLexer.rules = block;\n\n/**\n * Static Lex Method\n */\n\nLexer.lex = function(src, options) {\n  var lexer = new Lexer(options);\n  return lexer.lex(src);\n};\n\n/**\n * Preprocessing\n */\n\nLexer.prototype.lex = function(src) {\n  src = src\n    .replace(/\\r\\n|\\r/g, '\\n')\n    .replace(/\\t/g, '    ')\n    .replace(/\\u00a0/g, ' ')\n    .replace(/\\u2424/g, '\\n');\n\n  return this.token(src, true);\n};\n\n/**\n * Lexing\n */\n\nLexer.prototype.token = function(src, top) {\n  src = src.replace(/^ +$/gm, '');\n  var next,\n      loose,\n      cap,\n      bull,\n      b,\n      item,\n      listStart,\n      listItems,\n      t,\n      space,\n      i,\n      tag,\n      l,\n      isordered,\n      istask,\n      ischecked;\n\n  while (src) {\n    // newline\n    if (cap = this.rules.newline.exec(src)) {\n      src = src.substring(cap[0].length);\n      if (cap[0].length > 1) {\n        this.tokens.push({\n          type: 'space'\n        });\n      }\n    }\n\n    // code\n    if (cap = this.rules.code.exec(src)) {\n      src = src.substring(cap[0].length);\n      cap = cap[0].replace(/^ {4}/gm, '');\n      this.tokens.push({\n        type: 'code',\n        text: !this.options.pedantic\n          ? rtrim(cap, '\\n')\n          : cap\n      });\n      continue;\n    }\n\n    // fences (gfm)\n    if (cap = this.rules.fences.exec(src)) {\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: 'code',\n        lang: cap[2] ? cap[2].trim() : cap[2],\n        text: cap[3] || ''\n      });\n      continue;\n    }\n\n    // heading\n    if (cap = this.rules.heading.exec(src)) {\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: 'heading',\n        depth: cap[1].length,\n        text: cap[2]\n      });\n      continue;\n    }\n\n    // table no leading pipe (gfm)\n    if (cap = this.rules.nptable.exec(src)) {\n      item = {\n        type: 'table',\n        header: splitCells(cap[1].replace(/^ *| *\\| *$/g, '')),\n        align: cap[2].replace(/^ *|\\| *$/g, '').split(/ *\\| */),\n        cells: cap[3] ? cap[3].replace(/\\n$/, '').split('\\n') : []\n      };\n\n      if (item.header.length === item.align.length) {\n        src = src.substring(cap[0].length);\n\n        for (i = 0; i < item.align.length; i++) {\n          if (/^ *-+: *$/.test(item.align[i])) {\n            item.align[i] = 'right';\n          } else if (/^ *:-+: *$/.test(item.align[i])) {\n            item.align[i] = 'center';\n          } else if (/^ *:-+ *$/.test(item.align[i])) {\n            item.align[i] = 'left';\n          } else {\n            item.align[i] = null;\n          }\n        }\n\n        for (i = 0; i < item.cells.length; i++) {\n          item.cells[i] = splitCells(item.cells[i], item.header.length);\n        }\n\n        this.tokens.push(item);\n\n        continue;\n      }\n    }\n\n    // hr\n    if (cap = this.rules.hr.exec(src)) {\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: 'hr'\n      });\n      continue;\n    }\n\n    // blockquote\n    if (cap = this.rules.blockquote.exec(src)) {\n      src = src.substring(cap[0].length);\n\n      this.tokens.push({\n        type: 'blockquote_start'\n      });\n\n      cap = cap[0].replace(/^ *> ?/gm, '');\n\n      // Pass `top` to keep the current\n      // \"toplevel\" state. This is exactly\n      // how markdown.pl works.\n      this.token(cap, top);\n\n      this.tokens.push({\n        type: 'blockquote_end'\n      });\n\n      continue;\n    }\n\n    // list\n    if (cap = this.rules.list.exec(src)) {\n      src = src.substring(cap[0].length);\n      bull = cap[2];\n      isordered = bull.length > 1;\n\n      listStart = {\n        type: 'list_start',\n        ordered: isordered,\n        start: isordered ? +bull : '',\n        loose: false\n      };\n\n      this.tokens.push(listStart);\n\n      // Get each top-level item.\n      cap = cap[0].match(this.rules.item);\n\n      listItems = [];\n      next = false;\n      l = cap.length;\n      i = 0;\n\n      for (; i < l; i++) {\n        item = cap[i];\n\n        // Remove the list item's bullet\n        // so it is seen as the next token.\n        space = item.length;\n        item = item.replace(/^ *([*+-]|\\d+\\.) */, '');\n\n        // Outdent whatever the\n        // list item contains. Hacky.\n        if (~item.indexOf('\\n ')) {\n          space -= item.length;\n          item = !this.options.pedantic\n            ? item.replace(new RegExp('^ {1,' + space + '}', 'gm'), '')\n            : item.replace(/^ {1,4}/gm, '');\n        }\n\n        // Determine whether the next list item belongs here.\n        // Backpedal if it does not belong in this list.\n        if (i !== l - 1) {\n          b = block.bullet.exec(cap[i + 1])[0];\n          if (bull.length > 1 ? b.length === 1\n            : (b.length > 1 || (this.options.smartLists && b !== bull))) {\n            src = cap.slice(i + 1).join('\\n') + src;\n            i = l - 1;\n          }\n        }\n\n        // Determine whether item is loose or not.\n        // Use: /(^|\\n)(?! )[^\\n]+\\n\\n(?!\\s*$)/\n        // for discount behavior.\n        loose = next || /\\n\\n(?!\\s*$)/.test(item);\n        if (i !== l - 1) {\n          next = item.charAt(item.length - 1) === '\\n';\n          if (!loose) loose = next;\n        }\n\n        if (loose) {\n          listStart.loose = true;\n        }\n\n        // Check for task list items\n        istask = /^\\[[ xX]\\] /.test(item);\n        ischecked = undefined;\n        if (istask) {\n          ischecked = item[1] !== ' ';\n          item = item.replace(/^\\[[ xX]\\] +/, '');\n        }\n\n        t = {\n          type: 'list_item_start',\n          task: istask,\n          checked: ischecked,\n          loose: loose\n        };\n\n        listItems.push(t);\n        this.tokens.push(t);\n\n        // Recurse.\n        this.token(item, false);\n\n        this.tokens.push({\n          type: 'list_item_end'\n        });\n      }\n\n      if (listStart.loose) {\n        l = listItems.length;\n        i = 0;\n        for (; i < l; i++) {\n          listItems[i].loose = true;\n        }\n      }\n\n      this.tokens.push({\n        type: 'list_end'\n      });\n\n      continue;\n    }\n\n    // html\n    if (cap = this.rules.html.exec(src)) {\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: this.options.sanitize\n          ? 'paragraph'\n          : 'html',\n        pre: !this.options.sanitizer\n          && (cap[1] === 'pre' || cap[1] === 'script' || cap[1] === 'style'),\n        text: cap[0]\n      });\n      continue;\n    }\n\n    // def\n    if (top && (cap = this.rules.def.exec(src))) {\n      src = src.substring(cap[0].length);\n      if (cap[3]) cap[3] = cap[3].substring(1, cap[3].length - 1);\n      tag = cap[1].toLowerCase().replace(/\\s+/g, ' ');\n      if (!this.tokens.links[tag]) {\n        this.tokens.links[tag] = {\n          href: cap[2],\n          title: cap[3]\n        };\n      }\n      continue;\n    }\n\n    // table (gfm)\n    if (cap = this.rules.table.exec(src)) {\n      item = {\n        type: 'table',\n        header: splitCells(cap[1].replace(/^ *| *\\| *$/g, '')),\n        align: cap[2].replace(/^ *|\\| *$/g, '').split(/ *\\| */),\n        cells: cap[3] ? cap[3].replace(/\\n$/, '').split('\\n') : []\n      };\n\n      if (item.header.length === item.align.length) {\n        src = src.substring(cap[0].length);\n\n        for (i = 0; i < item.align.length; i++) {\n          if (/^ *-+: *$/.test(item.align[i])) {\n            item.align[i] = 'right';\n          } else if (/^ *:-+: *$/.test(item.align[i])) {\n            item.align[i] = 'center';\n          } else if (/^ *:-+ *$/.test(item.align[i])) {\n            item.align[i] = 'left';\n          } else {\n            item.align[i] = null;\n          }\n        }\n\n        for (i = 0; i < item.cells.length; i++) {\n          item.cells[i] = splitCells(\n            item.cells[i].replace(/^ *\\| *| *\\| *$/g, ''),\n            item.header.length);\n        }\n\n        this.tokens.push(item);\n\n        continue;\n      }\n    }\n\n    // lheading\n    if (cap = this.rules.lheading.exec(src)) {\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: 'heading',\n        depth: cap[2] === '=' ? 1 : 2,\n        text: cap[1]\n      });\n      continue;\n    }\n\n    // top-level paragraph\n    if (top && (cap = this.rules.paragraph.exec(src))) {\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: 'paragraph',\n        text: cap[1].charAt(cap[1].length - 1) === '\\n'\n          ? cap[1].slice(0, -1)\n          : cap[1]\n      });\n      continue;\n    }\n\n    // text\n    if (cap = this.rules.text.exec(src)) {\n      // Top-level should never reach here.\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: 'text',\n        text: cap[0]\n      });\n      continue;\n    }\n\n    if (src) {\n      throw new Error('Infinite loop on byte: ' + src.charCodeAt(0));\n    }\n  }\n\n  return this.tokens;\n};\n\n/**\n * Inline-Level Grammar\n */\n\nvar inline = {\n  escape: /^\\\\([!\"#$%&'()*+,\\-./:;<=>?@\\[\\]\\\\^_`{|}~])/,\n  autolink: /^<(scheme:[^\\s\\x00-\\x1f<>]*|email)>/,\n  url: noop,\n  tag: '^comment'\n    + '|^</[a-zA-Z][\\\\w:-]*\\\\s*>' // self-closing tag\n    + '|^<[a-zA-Z][\\\\w-]*(?:attribute)*?\\\\s*/?>' // open tag\n    + '|^<\\\\?[\\\\s\\\\S]*?\\\\?>' // processing instruction, e.g. <?php ?>\n    + '|^<![a-zA-Z]+\\\\s[\\\\s\\\\S]*?>' // declaration, e.g. <!DOCTYPE html>\n    + '|^<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?\\\\]\\\\]>', // CDATA section\n  link: /^!?\\[(label)\\]\\(href(?:\\s+(title))?\\s*\\)/,\n  reflink: /^!?\\[(label)\\]\\[(?!\\s*\\])((?:\\\\[\\[\\]]?|[^\\[\\]\\\\])+)\\]/,\n  nolink: /^!?\\[(?!\\s*\\])((?:\\[[^\\[\\]]*\\]|\\\\[\\[\\]]|[^\\[\\]])*)\\](?:\\[\\])?/,\n  strong: /^__([^\\s_])__(?!_)|^\\*\\*([^\\s*])\\*\\*(?!\\*)|^__([^\\s][\\s\\S]*?[^\\s])__(?!_)|^\\*\\*([^\\s][\\s\\S]*?[^\\s])\\*\\*(?!\\*)/,\n  em: /^_([^\\s_])_(?!_)|^\\*([^\\s*\"<\\[])\\*(?!\\*)|^_([^\\s][\\s\\S]*?[^\\s_])_(?!_|[^\\spunctuation])|^_([^\\s_][\\s\\S]*?[^\\s])_(?!_|[^\\spunctuation])|^\\*([^\\s\"<\\[][\\s\\S]*?[^\\s*])\\*(?!\\*)|^\\*([^\\s*\"<\\[][\\s\\S]*?[^\\s])\\*(?!\\*)/,\n  code: /^(`+)([^`]|[^`][\\s\\S]*?[^`])\\1(?!`)/,\n  br: /^( {2,}|\\\\)\\n(?!\\s*$)/,\n  del: noop,\n  text: /^(`+|[^`])(?:[\\s\\S]*?(?:(?=[\\\\<!\\[`*]|\\b_|$)|[^ ](?= {2,}\\n))|(?= {2,}\\n))/\n};\n\n// list of punctuation marks from common mark spec\n// without ` and ] to workaround Rule 17 (inline code blocks/links)\ninline._punctuation = '!\"#$%&\\'()*+,\\\\-./:;<=>?@\\\\[^_{|}~';\ninline.em = edit(inline.em).replace(/punctuation/g, inline._punctuation).getRegex();\n\ninline._escapes = /\\\\([!\"#$%&'()*+,\\-./:;<=>?@\\[\\]\\\\^_`{|}~])/g;\n\ninline._scheme = /[a-zA-Z][a-zA-Z0-9+.-]{1,31}/;\ninline._email = /[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+(@)[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)+(?![-_])/;\ninline.autolink = edit(inline.autolink)\n  .replace('scheme', inline._scheme)\n  .replace('email', inline._email)\n  .getRegex();\n\ninline._attribute = /\\s+[a-zA-Z:_][\\w.:-]*(?:\\s*=\\s*\"[^\"]*\"|\\s*=\\s*'[^']*'|\\s*=\\s*[^\\s\"'=<>`]+)?/;\n\ninline.tag = edit(inline.tag)\n  .replace('comment', block._comment)\n  .replace('attribute', inline._attribute)\n  .getRegex();\n\ninline._label = /(?:\\[[^\\[\\]]*\\]|\\\\[\\[\\]]?|`[^`]*`|`(?!`)|[^\\[\\]\\\\`])*?/;\ninline._href = /\\s*(<(?:\\\\[<>]?|[^\\s<>\\\\])*>|[^\\s\\x00-\\x1f]*)/;\ninline._title = /\"(?:\\\\\"?|[^\"\\\\])*\"|'(?:\\\\'?|[^'\\\\])*'|\\((?:\\\\\\)?|[^)\\\\])*\\)/;\n\ninline.link = edit(inline.link)\n  .replace('label', inline._label)\n  .replace('href', inline._href)\n  .replace('title', inline._title)\n  .getRegex();\n\ninline.reflink = edit(inline.reflink)\n  .replace('label', inline._label)\n  .getRegex();\n\n/**\n * Normal Inline Grammar\n */\n\ninline.normal = merge({}, inline);\n\n/**\n * Pedantic Inline Grammar\n */\n\ninline.pedantic = merge({}, inline.normal, {\n  strong: /^__(?=\\S)([\\s\\S]*?\\S)__(?!_)|^\\*\\*(?=\\S)([\\s\\S]*?\\S)\\*\\*(?!\\*)/,\n  em: /^_(?=\\S)([\\s\\S]*?\\S)_(?!_)|^\\*(?=\\S)([\\s\\S]*?\\S)\\*(?!\\*)/,\n  link: edit(/^!?\\[(label)\\]\\((.*?)\\)/)\n    .replace('label', inline._label)\n    .getRegex(),\n  reflink: edit(/^!?\\[(label)\\]\\s*\\[([^\\]]*)\\]/)\n    .replace('label', inline._label)\n    .getRegex()\n});\n\n/**\n * GFM Inline Grammar\n */\n\ninline.gfm = merge({}, inline.normal, {\n  escape: edit(inline.escape).replace('])', '~|])').getRegex(),\n  _extended_email: /[A-Za-z0-9._+-]+(@)[a-zA-Z0-9-_]+(?:\\.[a-zA-Z0-9-_]*[a-zA-Z0-9])+(?![-_])/,\n  url: /^((?:ftp|https?):\\/\\/|www\\.)(?:[a-zA-Z0-9\\-]+\\.?)+[^\\s<]*|^email/,\n  _backpedal: /(?:[^?!.,:;*_~()&]+|\\([^)]*\\)|&(?![a-zA-Z0-9]+;$)|[?!.,:;*_~)]+(?!$))+/,\n  del: /^~+(?=\\S)([\\s\\S]*?\\S)~+/,\n  text: /^(`+|[^`])(?:[\\s\\S]*?(?:(?=[\\\\<!\\[`*~]|\\b_|https?:\\/\\/|ftp:\\/\\/|www\\.|$)|[^ ](?= {2,}\\n)|[^a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-](?=[a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-]+@))|(?= {2,}\\n|[a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-]+@))/\n});\n\ninline.gfm.url = edit(inline.gfm.url, 'i')\n  .replace('email', inline.gfm._extended_email)\n  .getRegex();\n/**\n * GFM + Line Breaks Inline Grammar\n */\n\ninline.breaks = merge({}, inline.gfm, {\n  br: edit(inline.br).replace('{2,}', '*').getRegex(),\n  text: edit(inline.gfm.text).replace(/\\{2,\\}/g, '*').getRegex()\n});\n\n/**\n * Inline Lexer & Compiler\n */\n\nfunction InlineLexer(links, options) {\n  this.options = options || marked.defaults;\n  this.links = links;\n  this.rules = inline.normal;\n  this.renderer = this.options.renderer || new Renderer();\n  this.renderer.options = this.options;\n\n  if (!this.links) {\n    throw new Error('Tokens array requires a `links` property.');\n  }\n\n  if (this.options.pedantic) {\n    this.rules = inline.pedantic;\n  } else if (this.options.gfm) {\n    if (this.options.breaks) {\n      this.rules = inline.breaks;\n    } else {\n      this.rules = inline.gfm;\n    }\n  }\n}\n\n/**\n * Expose Inline Rules\n */\n\nInlineLexer.rules = inline;\n\n/**\n * Static Lexing/Compiling Method\n */\n\nInlineLexer.output = function(src, links, options) {\n  var inline = new InlineLexer(links, options);\n  return inline.output(src);\n};\n\n/**\n * Lexing/Compiling\n */\n\nInlineLexer.prototype.output = function(src) {\n  var out = '',\n      link,\n      text,\n      href,\n      title,\n      cap,\n      prevCapZero;\n\n  while (src) {\n    // escape\n    if (cap = this.rules.escape.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += escape(cap[1]);\n      continue;\n    }\n\n    // tag\n    if (cap = this.rules.tag.exec(src)) {\n      if (!this.inLink && /^<a /i.test(cap[0])) {\n        this.inLink = true;\n      } else if (this.inLink && /^<\\/a>/i.test(cap[0])) {\n        this.inLink = false;\n      }\n      if (!this.inRawBlock && /^<(pre|code|kbd|script)(\\s|>)/i.test(cap[0])) {\n        this.inRawBlock = true;\n      } else if (this.inRawBlock && /^<\\/(pre|code|kbd|script)(\\s|>)/i.test(cap[0])) {\n        this.inRawBlock = false;\n      }\n\n      src = src.substring(cap[0].length);\n      out += this.options.sanitize\n        ? this.options.sanitizer\n          ? this.options.sanitizer(cap[0])\n          : escape(cap[0])\n        : cap[0];\n      continue;\n    }\n\n    // link\n    if (cap = this.rules.link.exec(src)) {\n      var lastParenIndex = findClosingBracket(cap[2], '()');\n      if (lastParenIndex > -1) {\n        var linkLen = cap[0].length - (cap[2].length - lastParenIndex) - (cap[3] || '').length;\n        cap[2] = cap[2].substring(0, lastParenIndex);\n        cap[0] = cap[0].substring(0, linkLen).trim();\n        cap[3] = '';\n      }\n      src = src.substring(cap[0].length);\n      this.inLink = true;\n      href = cap[2];\n      if (this.options.pedantic) {\n        link = /^([^'\"]*[^\\s])\\s+(['\"])(.*)\\2/.exec(href);\n\n        if (link) {\n          href = link[1];\n          title = link[3];\n        } else {\n          title = '';\n        }\n      } else {\n        title = cap[3] ? cap[3].slice(1, -1) : '';\n      }\n      href = href.trim().replace(/^<([\\s\\S]*)>$/, '$1');\n      out += this.outputLink(cap, {\n        href: InlineLexer.escapes(href),\n        title: InlineLexer.escapes(title)\n      });\n      this.inLink = false;\n      continue;\n    }\n\n    // reflink, nolink\n    if ((cap = this.rules.reflink.exec(src))\n        || (cap = this.rules.nolink.exec(src))) {\n      src = src.substring(cap[0].length);\n      link = (cap[2] || cap[1]).replace(/\\s+/g, ' ');\n      link = this.links[link.toLowerCase()];\n      if (!link || !link.href) {\n        out += cap[0].charAt(0);\n        src = cap[0].substring(1) + src;\n        continue;\n      }\n      this.inLink = true;\n      out += this.outputLink(cap, link);\n      this.inLink = false;\n      continue;\n    }\n\n    // strong\n    if (cap = this.rules.strong.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += this.renderer.strong(this.output(cap[4] || cap[3] || cap[2] || cap[1]));\n      continue;\n    }\n\n    // em\n    if (cap = this.rules.em.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += this.renderer.em(this.output(cap[6] || cap[5] || cap[4] || cap[3] || cap[2] || cap[1]));\n      continue;\n    }\n\n    // code\n    if (cap = this.rules.code.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += this.renderer.codespan(escape(cap[2].trim(), true));\n      continue;\n    }\n\n    // br\n    if (cap = this.rules.br.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += this.renderer.br();\n      continue;\n    }\n\n    // del (gfm)\n    if (cap = this.rules.del.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += this.renderer.del(this.output(cap[1]));\n      continue;\n    }\n\n    // autolink\n    if (cap = this.rules.autolink.exec(src)) {\n      src = src.substring(cap[0].length);\n      if (cap[2] === '@') {\n        text = escape(this.mangle(cap[1]));\n        href = 'mailto:' + text;\n      } else {\n        text = escape(cap[1]);\n        href = text;\n      }\n      out += this.renderer.link(href, null, text);\n      continue;\n    }\n\n    // url (gfm)\n    if (!this.inLink && (cap = this.rules.url.exec(src))) {\n      if (cap[2] === '@') {\n        text = escape(cap[0]);\n        href = 'mailto:' + text;\n      } else {\n        // do extended autolink path validation\n        do {\n          prevCapZero = cap[0];\n          cap[0] = this.rules._backpedal.exec(cap[0])[0];\n        } while (prevCapZero !== cap[0]);\n        text = escape(cap[0]);\n        if (cap[1] === 'www.') {\n          href = 'http://' + text;\n        } else {\n          href = text;\n        }\n      }\n      src = src.substring(cap[0].length);\n      out += this.renderer.link(href, null, text);\n      continue;\n    }\n\n    // text\n    if (cap = this.rules.text.exec(src)) {\n      src = src.substring(cap[0].length);\n      if (this.inRawBlock) {\n        out += this.renderer.text(cap[0]);\n      } else {\n        out += this.renderer.text(escape(this.smartypants(cap[0])));\n      }\n      continue;\n    }\n\n    if (src) {\n      throw new Error('Infinite loop on byte: ' + src.charCodeAt(0));\n    }\n  }\n\n  return out;\n};\n\nInlineLexer.escapes = function(text) {\n  return text ? text.replace(InlineLexer.rules._escapes, '$1') : text;\n};\n\n/**\n * Compile Link\n */\n\nInlineLexer.prototype.outputLink = function(cap, link) {\n  var href = link.href,\n      title = link.title ? escape(link.title) : null;\n\n  return cap[0].charAt(0) !== '!'\n    ? this.renderer.link(href, title, this.output(cap[1]))\n    : this.renderer.image(href, title, escape(cap[1]));\n};\n\n/**\n * Smartypants Transformations\n */\n\nInlineLexer.prototype.smartypants = function(text) {\n  if (!this.options.smartypants) return text;\n  return text\n    // em-dashes\n    .replace(/---/g, '\\u2014')\n    // en-dashes\n    .replace(/--/g, '\\u2013')\n    // opening singles\n    .replace(/(^|[-\\u2014/(\\[{\"\\s])'/g, '$1\\u2018')\n    // closing singles & apostrophes\n    .replace(/'/g, '\\u2019')\n    // opening doubles\n    .replace(/(^|[-\\u2014/(\\[{\\u2018\\s])\"/g, '$1\\u201c')\n    // closing doubles\n    .replace(/\"/g, '\\u201d')\n    // ellipses\n    .replace(/\\.{3}/g, '\\u2026');\n};\n\n/**\n * Mangle Links\n */\n\nInlineLexer.prototype.mangle = function(text) {\n  if (!this.options.mangle) return text;\n  var out = '',\n      l = text.length,\n      i = 0,\n      ch;\n\n  for (; i < l; i++) {\n    ch = text.charCodeAt(i);\n    if (Math.random() > 0.5) {\n      ch = 'x' + ch.toString(16);\n    }\n    out += '&#' + ch + ';';\n  }\n\n  return out;\n};\n\n/**\n * Renderer\n */\n\nfunction Renderer(options) {\n  this.options = options || marked.defaults;\n}\n\nRenderer.prototype.code = function(code, infostring, escaped) {\n  var lang = (infostring || '').match(/\\S*/)[0];\n  if (this.options.highlight) {\n    var out = this.options.highlight(code, lang);\n    if (out != null && out !== code) {\n      escaped = true;\n      code = out;\n    }\n  }\n\n  if (!lang) {\n    return '<pre><code>'\n      + (escaped ? code : escape(code, true))\n      + '</code></pre>';\n  }\n\n  return '<pre><code class=\"'\n    + this.options.langPrefix\n    + escape(lang, true)\n    + '\">'\n    + (escaped ? code : escape(code, true))\n    + '</code></pre>\\n';\n};\n\nRenderer.prototype.blockquote = function(quote) {\n  return '<blockquote>\\n' + quote + '</blockquote>\\n';\n};\n\nRenderer.prototype.html = function(html) {\n  return html;\n};\n\nRenderer.prototype.heading = function(text, level, raw, slugger) {\n  if (this.options.headerIds) {\n    return '<h'\n      + level\n      + ' id=\"'\n      + this.options.headerPrefix\n      + slugger.slug(raw)\n      + '\">'\n      + text\n      + '</h'\n      + level\n      + '>\\n';\n  }\n  // ignore IDs\n  return '<h' + level + '>' + text + '</h' + level + '>\\n';\n};\n\nRenderer.prototype.hr = function() {\n  return this.options.xhtml ? '<hr/>\\n' : '<hr>\\n';\n};\n\nRenderer.prototype.list = function(body, ordered, start) {\n  var type = ordered ? 'ol' : 'ul',\n      startatt = (ordered && start !== 1) ? (' start=\"' + start + '\"') : '';\n  return '<' + type + startatt + '>\\n' + body + '</' + type + '>\\n';\n};\n\nRenderer.prototype.listitem = function(text) {\n  return '<li>' + text + '</li>\\n';\n};\n\nRenderer.prototype.checkbox = function(checked) {\n  return '<input '\n    + (checked ? 'checked=\"\" ' : '')\n    + 'disabled=\"\" type=\"checkbox\"'\n    + (this.options.xhtml ? ' /' : '')\n    + '> ';\n};\n\nRenderer.prototype.paragraph = function(text) {\n  return '<p>' + text + '</p>\\n';\n};\n\nRenderer.prototype.table = function(header, body) {\n  if (body) body = '<tbody>' + body + '</tbody>';\n\n  return '<table>\\n'\n    + '<thead>\\n'\n    + header\n    + '</thead>\\n'\n    + body\n    + '</table>\\n';\n};\n\nRenderer.prototype.tablerow = function(content) {\n  return '<tr>\\n' + content + '</tr>\\n';\n};\n\nRenderer.prototype.tablecell = function(content, flags) {\n  var type = flags.header ? 'th' : 'td';\n  var tag = flags.align\n    ? '<' + type + ' align=\"' + flags.align + '\">'\n    : '<' + type + '>';\n  return tag + content + '</' + type + '>\\n';\n};\n\n// span level renderer\nRenderer.prototype.strong = function(text) {\n  return '<strong>' + text + '</strong>';\n};\n\nRenderer.prototype.em = function(text) {\n  return '<em>' + text + '</em>';\n};\n\nRenderer.prototype.codespan = function(text) {\n  return '<code>' + text + '</code>';\n};\n\nRenderer.prototype.br = function() {\n  return this.options.xhtml ? '<br/>' : '<br>';\n};\n\nRenderer.prototype.del = function(text) {\n  return '<del>' + text + '</del>';\n};\n\nRenderer.prototype.link = function(href, title, text) {\n  href = cleanUrl(this.options.sanitize, this.options.baseUrl, href);\n  if (href === null) {\n    return text;\n  }\n  var out = '<a href=\"' + escape(href) + '\"';\n  if (title) {\n    out += ' title=\"' + title + '\"';\n  }\n  out += '>' + text + '</a>';\n  return out;\n};\n\nRenderer.prototype.image = function(href, title, text) {\n  href = cleanUrl(this.options.sanitize, this.options.baseUrl, href);\n  if (href === null) {\n    return text;\n  }\n\n  var out = '<img src=\"' + href + '\" alt=\"' + text + '\"';\n  if (title) {\n    out += ' title=\"' + title + '\"';\n  }\n  out += this.options.xhtml ? '/>' : '>';\n  return out;\n};\n\nRenderer.prototype.text = function(text) {\n  return text;\n};\n\n/**\n * TextRenderer\n * returns only the textual part of the token\n */\n\nfunction TextRenderer() {}\n\n// no need for block level renderers\n\nTextRenderer.prototype.strong =\nTextRenderer.prototype.em =\nTextRenderer.prototype.codespan =\nTextRenderer.prototype.del =\nTextRenderer.prototype.text = function (text) {\n  return text;\n};\n\nTextRenderer.prototype.link =\nTextRenderer.prototype.image = function(href, title, text) {\n  return '' + text;\n};\n\nTextRenderer.prototype.br = function() {\n  return '';\n};\n\n/**\n * Parsing & Compiling\n */\n\nfunction Parser(options) {\n  this.tokens = [];\n  this.token = null;\n  this.options = options || marked.defaults;\n  this.options.renderer = this.options.renderer || new Renderer();\n  this.renderer = this.options.renderer;\n  this.renderer.options = this.options;\n  this.slugger = new Slugger();\n}\n\n/**\n * Static Parse Method\n */\n\nParser.parse = function(src, options) {\n  var parser = new Parser(options);\n  return parser.parse(src);\n};\n\n/**\n * Parse Loop\n */\n\nParser.prototype.parse = function(src) {\n  this.inline = new InlineLexer(src.links, this.options);\n  // use an InlineLexer with a TextRenderer to extract pure text\n  this.inlineText = new InlineLexer(\n    src.links,\n    merge({}, this.options, {renderer: new TextRenderer()})\n  );\n  this.tokens = src.reverse();\n\n  var out = '';\n  while (this.next()) {\n    out += this.tok();\n  }\n\n  return out;\n};\n\n/**\n * Next Token\n */\n\nParser.prototype.next = function() {\n  return this.token = this.tokens.pop();\n};\n\n/**\n * Preview Next Token\n */\n\nParser.prototype.peek = function() {\n  return this.tokens[this.tokens.length - 1] || 0;\n};\n\n/**\n * Parse Text Tokens\n */\n\nParser.prototype.parseText = function() {\n  var body = this.token.text;\n\n  while (this.peek().type === 'text') {\n    body += '\\n' + this.next().text;\n  }\n\n  return this.inline.output(body);\n};\n\n/**\n * Parse Current Token\n */\n\nParser.prototype.tok = function() {\n  switch (this.token.type) {\n    case 'space': {\n      return '';\n    }\n    case 'hr': {\n      return this.renderer.hr();\n    }\n    case 'heading': {\n      return this.renderer.heading(\n        this.inline.output(this.token.text),\n        this.token.depth,\n        unescape(this.inlineText.output(this.token.text)),\n        this.slugger);\n    }\n    case 'code': {\n      return this.renderer.code(this.token.text,\n        this.token.lang,\n        this.token.escaped);\n    }\n    case 'table': {\n      var header = '',\n          body = '',\n          i,\n          row,\n          cell,\n          j;\n\n      // header\n      cell = '';\n      for (i = 0; i < this.token.header.length; i++) {\n        cell += this.renderer.tablecell(\n          this.inline.output(this.token.header[i]),\n          { header: true, align: this.token.align[i] }\n        );\n      }\n      header += this.renderer.tablerow(cell);\n\n      for (i = 0; i < this.token.cells.length; i++) {\n        row = this.token.cells[i];\n\n        cell = '';\n        for (j = 0; j < row.length; j++) {\n          cell += this.renderer.tablecell(\n            this.inline.output(row[j]),\n            { header: false, align: this.token.align[j] }\n          );\n        }\n\n        body += this.renderer.tablerow(cell);\n      }\n      return this.renderer.table(header, body);\n    }\n    case 'blockquote_start': {\n      body = '';\n\n      while (this.next().type !== 'blockquote_end') {\n        body += this.tok();\n      }\n\n      return this.renderer.blockquote(body);\n    }\n    case 'list_start': {\n      body = '';\n      var ordered = this.token.ordered,\n          start = this.token.start;\n\n      while (this.next().type !== 'list_end') {\n        body += this.tok();\n      }\n\n      return this.renderer.list(body, ordered, start);\n    }\n    case 'list_item_start': {\n      body = '';\n      var loose = this.token.loose;\n      var checked = this.token.checked;\n      var task = this.token.task;\n\n      if (this.token.task) {\n        body += this.renderer.checkbox(checked);\n      }\n\n      while (this.next().type !== 'list_item_end') {\n        body += !loose && this.token.type === 'text'\n          ? this.parseText()\n          : this.tok();\n      }\n      return this.renderer.listitem(body, task, checked);\n    }\n    case 'html': {\n      // TODO parse inline content if parameter markdown=1\n      return this.renderer.html(this.token.text);\n    }\n    case 'paragraph': {\n      return this.renderer.paragraph(this.inline.output(this.token.text));\n    }\n    case 'text': {\n      return this.renderer.paragraph(this.parseText());\n    }\n    default: {\n      var errMsg = 'Token with \"' + this.token.type + '\" type was not found.';\n      if (this.options.silent) {\n        console.log(errMsg);\n      } else {\n        throw new Error(errMsg);\n      }\n    }\n  }\n};\n\n/**\n * Slugger generates header id\n */\n\nfunction Slugger () {\n  this.seen = {};\n}\n\n/**\n * Convert string to unique id\n */\n\nSlugger.prototype.slug = function (value) {\n  var slug = value\n    .toLowerCase()\n    .trim()\n    .replace(/[\\u2000-\\u206F\\u2E00-\\u2E7F\\\\'!\"#$%&()*+,./:;<=>?@[\\]^`{|}~]/g, '')\n    .replace(/\\s/g, '-');\n\n  if (this.seen.hasOwnProperty(slug)) {\n    var originalSlug = slug;\n    do {\n      this.seen[originalSlug]++;\n      slug = originalSlug + '-' + this.seen[originalSlug];\n    } while (this.seen.hasOwnProperty(slug));\n  }\n  this.seen[slug] = 0;\n\n  return slug;\n};\n\n/**\n * Helpers\n */\n\nfunction escape(html, encode) {\n  if (encode) {\n    if (escape.escapeTest.test(html)) {\n      return html.replace(escape.escapeReplace, function (ch) { return escape.replacements[ch]; });\n    }\n  } else {\n    if (escape.escapeTestNoEncode.test(html)) {\n      return html.replace(escape.escapeReplaceNoEncode, function (ch) { return escape.replacements[ch]; });\n    }\n  }\n\n  return html;\n}\n\nescape.escapeTest = /[&<>\"']/;\nescape.escapeReplace = /[&<>\"']/g;\nescape.replacements = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;',\n  \"'\": '&#39;'\n};\n\nescape.escapeTestNoEncode = /[<>\"']|&(?!#?\\w+;)/;\nescape.escapeReplaceNoEncode = /[<>\"']|&(?!#?\\w+;)/g;\n\nfunction unescape(html) {\n  // explicitly match decimal, hex, and named HTML entities\n  return html.replace(/&(#(?:\\d+)|(?:#x[0-9A-Fa-f]+)|(?:\\w+));?/ig, function(_, n) {\n    n = n.toLowerCase();\n    if (n === 'colon') return ':';\n    if (n.charAt(0) === '#') {\n      return n.charAt(1) === 'x'\n        ? String.fromCharCode(parseInt(n.substring(2), 16))\n        : String.fromCharCode(+n.substring(1));\n    }\n    return '';\n  });\n}\n\nfunction edit(regex, opt) {\n  regex = regex.source || regex;\n  opt = opt || '';\n  return {\n    replace: function(name, val) {\n      val = val.source || val;\n      val = val.replace(/(^|[^\\[])\\^/g, '$1');\n      regex = regex.replace(name, val);\n      return this;\n    },\n    getRegex: function() {\n      return new RegExp(regex, opt);\n    }\n  };\n}\n\nfunction cleanUrl(sanitize, base, href) {\n  if (sanitize) {\n    try {\n      var prot = decodeURIComponent(unescape(href))\n        .replace(/[^\\w:]/g, '')\n        .toLowerCase();\n    } catch (e) {\n      return null;\n    }\n    if (prot.indexOf('javascript:') === 0 || prot.indexOf('vbscript:') === 0 || prot.indexOf('data:') === 0) {\n      return null;\n    }\n  }\n  if (base && !originIndependentUrl.test(href)) {\n    href = resolveUrl(base, href);\n  }\n  try {\n    href = encodeURI(href).replace(/%25/g, '%');\n  } catch (e) {\n    return null;\n  }\n  return href;\n}\n\nfunction resolveUrl(base, href) {\n  if (!baseUrls[' ' + base]) {\n    // we can ignore everything in base after the last slash of its path component,\n    // but we might need to add _that_\n    // https://tools.ietf.org/html/rfc3986#section-3\n    if (/^[^:]+:\\/*[^/]*$/.test(base)) {\n      baseUrls[' ' + base] = base + '/';\n    } else {\n      baseUrls[' ' + base] = rtrim(base, '/', true);\n    }\n  }\n  base = baseUrls[' ' + base];\n\n  if (href.slice(0, 2) === '//') {\n    return base.replace(/:[\\s\\S]*/, ':') + href;\n  } else if (href.charAt(0) === '/') {\n    return base.replace(/(:\\/*[^/]*)[\\s\\S]*/, '$1') + href;\n  } else {\n    return base + href;\n  }\n}\nvar baseUrls = {};\nvar originIndependentUrl = /^$|^[a-z][a-z0-9+.-]*:|^[?#]/i;\n\nfunction noop() {}\nnoop.exec = noop;\n\nfunction merge(obj) {\n  var i = 1,\n      target,\n      key;\n\n  for (; i < arguments.length; i++) {\n    target = arguments[i];\n    for (key in target) {\n      if (Object.prototype.hasOwnProperty.call(target, key)) {\n        obj[key] = target[key];\n      }\n    }\n  }\n\n  return obj;\n}\n\nfunction splitCells(tableRow, count) {\n  // ensure that every cell-delimiting pipe has a space\n  // before it to distinguish it from an escaped pipe\n  var row = tableRow.replace(/\\|/g, function (match, offset, str) {\n        var escaped = false,\n            curr = offset;\n        while (--curr >= 0 && str[curr] === '\\\\') escaped = !escaped;\n        if (escaped) {\n          // odd number of slashes means | is escaped\n          // so we leave it alone\n          return '|';\n        } else {\n          // add space before unescaped |\n          return ' |';\n        }\n      }),\n      cells = row.split(/ \\|/),\n      i = 0;\n\n  if (cells.length > count) {\n    cells.splice(count);\n  } else {\n    while (cells.length < count) cells.push('');\n  }\n\n  for (; i < cells.length; i++) {\n    // leading or trailing whitespace is ignored per the gfm spec\n    cells[i] = cells[i].trim().replace(/\\\\\\|/g, '|');\n  }\n  return cells;\n}\n\n// Remove trailing 'c's. Equivalent to str.replace(/c*$/, '').\n// /c*$/ is vulnerable to REDOS.\n// invert: Remove suffix of non-c chars instead. Default falsey.\nfunction rtrim(str, c, invert) {\n  if (str.length === 0) {\n    return '';\n  }\n\n  // Length of suffix matching the invert condition.\n  var suffLen = 0;\n\n  // Step left until we fail to match the invert condition.\n  while (suffLen < str.length) {\n    var currChar = str.charAt(str.length - suffLen - 1);\n    if (currChar === c && !invert) {\n      suffLen++;\n    } else if (currChar !== c && invert) {\n      suffLen++;\n    } else {\n      break;\n    }\n  }\n\n  return str.substr(0, str.length - suffLen);\n}\n\nfunction findClosingBracket(str, b) {\n  if (str.indexOf(b[1]) === -1) {\n    return -1;\n  }\n  var level = 0;\n  for (var i = 0; i < str.length; i++) {\n    if (str[i] === '\\\\') {\n      i++;\n    } else if (str[i] === b[0]) {\n      level++;\n    } else if (str[i] === b[1]) {\n      level--;\n      if (level < 0) {\n        return i;\n      }\n    }\n  }\n  return -1;\n}\n\n/**\n * Marked\n */\n\nfunction marked(src, opt, callback) {\n  // throw error in case of non string input\n  if (typeof src === 'undefined' || src === null) {\n    throw new Error('marked(): input parameter is undefined or null');\n  }\n  if (typeof src !== 'string') {\n    throw new Error('marked(): input parameter is of type '\n      + Object.prototype.toString.call(src) + ', string expected');\n  }\n\n  if (callback || typeof opt === 'function') {\n    if (!callback) {\n      callback = opt;\n      opt = null;\n    }\n\n    opt = merge({}, marked.defaults, opt || {});\n\n    var highlight = opt.highlight,\n        tokens,\n        pending,\n        i = 0;\n\n    try {\n      tokens = Lexer.lex(src, opt);\n    } catch (e) {\n      return callback(e);\n    }\n\n    pending = tokens.length;\n\n    var done = function(err) {\n      if (err) {\n        opt.highlight = highlight;\n        return callback(err);\n      }\n\n      var out;\n\n      try {\n        out = Parser.parse(tokens, opt);\n      } catch (e) {\n        err = e;\n      }\n\n      opt.highlight = highlight;\n\n      return err\n        ? callback(err)\n        : callback(null, out);\n    };\n\n    if (!highlight || highlight.length < 3) {\n      return done();\n    }\n\n    delete opt.highlight;\n\n    if (!pending) return done();\n\n    for (; i < tokens.length; i++) {\n      (function(token) {\n        if (token.type !== 'code') {\n          return --pending || done();\n        }\n        return highlight(token.text, token.lang, function(err, code) {\n          if (err) return done(err);\n          if (code == null || code === token.text) {\n            return --pending || done();\n          }\n          token.text = code;\n          token.escaped = true;\n          --pending || done();\n        });\n      })(tokens[i]);\n    }\n\n    return;\n  }\n  try {\n    if (opt) opt = merge({}, marked.defaults, opt);\n    return Parser.parse(Lexer.lex(src, opt), opt);\n  } catch (e) {\n    e.message += '\\nPlease report this to https://github.com/markedjs/marked.';\n    if ((opt || marked.defaults).silent) {\n      return '<p>An error occurred:</p><pre>'\n        + escape(e.message + '', true)\n        + '</pre>';\n    }\n    throw e;\n  }\n}\n\n/**\n * Options\n */\n\nmarked.options =\nmarked.setOptions = function(opt) {\n  merge(marked.defaults, opt);\n  return marked;\n};\n\nmarked.getDefaults = function () {\n  return {\n    baseUrl: null,\n    breaks: false,\n    gfm: true,\n    headerIds: true,\n    headerPrefix: '',\n    highlight: null,\n    langPrefix: 'language-',\n    mangle: true,\n    pedantic: false,\n    renderer: new Renderer(),\n    sanitize: false,\n    sanitizer: null,\n    silent: false,\n    smartLists: false,\n    smartypants: false,\n    tables: true,\n    xhtml: false\n  };\n};\n\nmarked.defaults = marked.getDefaults();\n\n/**\n * Expose\n */\n\nmarked.Parser = Parser;\nmarked.parser = Parser.parse;\n\nmarked.Renderer = Renderer;\nmarked.TextRenderer = TextRenderer;\n\nmarked.Lexer = Lexer;\nmarked.lexer = Lexer.lex;\n\nmarked.InlineLexer = InlineLexer;\nmarked.inlineLexer = InlineLexer.output;\n\nmarked.Slugger = Slugger;\n\nmarked.parse = marked;\n\nif (typeof module !== 'undefined' && typeof exports === 'object') {\n  module.exports = marked;\n} else if (typeof define === 'function' && define.amd) {\n  define(function() { return marked; });\n} else {\n  root.marked = marked;\n}\n})(this || (typeof window !== 'undefined' ? window : global));\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n"],"sourceRoot":""}